{"version":3,"file":"static/js/134.f72a63db.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7abf809e4374e90b9eb434bc86c68fb9';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst MOVIE_URL = `${BASE_URL}/movie`;\n\nconst fetchTrendsFilms = async () => {\n  const responce = await axios.get(`${TREND_URL}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nconst featchSearchFilm = async query => {\n  const responce = await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data;\n};\n\nconst featchMovieDetailsById = async movieId => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport {\n  fetchTrendsFilms,\n  featchSearchFilm,\n  featchMovieDetailsById,\n  featchMovieCredits,\n  featchMovieReviews,\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  padding: 10px;\n  font-size: 16px;\n`;\nconst Item = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  &:hover,\n  &:focus {\n    color: orangered;\n    border: 1px solid orangen;\n  }\n`;\nconst Title = styled.h1`\n  font-size: 24px;\n`;\nexport { List, Item, Title };","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Title } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, titlePage }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <Title>{titlePage}</Title>}\n\n      <List>\n        {movies.map(({ id, title }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MoviesList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { featchSearchFilm } from '../components/Api/Api';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovie] = useState(null);\n  const [totalRezultMovie, setTotalRezMovie] = useState(null);\n  const [showLoading, setShowLoading] = useState(false);\n  const [inputSearch, setInputSearch] = useState(query);\n\n  useEffect(() => {\n    if (query === '') return;\n    setMovie(null);\n    setTotalRezMovie(null);\n    setShowLoading(true);\n    async function getMovieSearch() {\n      try {\n        const getMovieInf = await featchSearchFilm(query);\n        setMovie(getMovieInf.results);\n        setTotalRezMovie(getMovieInf.total_results);\n        setShowLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieSearch();\n  }, [query]);\n\n  const handleInputChange = e => {\n    setInputSearch(e.currentTarget.value);\n    if (e.currentTarget.value === '') {\n      setSearchParams({});\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n\n    setSearchParams({ query: queryNormalized });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Enter movie name\"\n          style={{\n            fontSize: 14,\n            color: '000000',\n            marginRight: 16,\n          }}\n        />\n\n        <button\n          type=\"submit\"\n          style={{\n            fontSize: 14,\n          }}\n        >\n          Search\n        </button>\n      </form>\n\n      {showLoading && <div>Loading...</div>}\n      {movies && <MoviesList movies={movies} />}\n\n      {totalRezultMovie === 0 && <div>Not found movies</div>}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","MOVIE_URL","fetchTrendsFilms","axios","responce","data","featchSearchFilm","query","featchMovieDetailsById","movieId","featchMovieCredits","id","featchMovieReviews","List","styled","Item","Title","movies","titlePage","location","useLocation","map","title","to","state","from","useSearchParams","searchParams","setSearchParams","get","useState","setMovie","totalRezultMovie","setTotalRezMovie","showLoading","setShowLoading","inputSearch","setInputSearch","useEffect","getMovieInf","results","total_results","console","log","getMovieSearch","onSubmit","e","preventDefault","queryNormalized","target","value","toLowerCase","trim","type","name","onChange","currentTarget","placeholder","style","fontSize","color","marginRight"],"sourceRoot":""}