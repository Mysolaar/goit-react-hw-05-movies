{"version":3,"file":"static/js/387.21a501b7.chunk.js","mappings":"+SAEMA,EAAU,mCAEVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAS,UAAMH,EAAN,UAETI,EAAgB,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAkCF,IADlC,cACjBO,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACIH,EADJ,kBACqBU,IAFrB,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBG,EAAsB,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLQ,EADK,oBACcZ,IAFR,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOtBK,EAAkB,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLU,EADK,4BACiBd,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOlBO,EAAkB,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLU,EADK,4BACiBd,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,4JCjClBQ,EAAWC,EAAAA,GAAAA,GAAH,iMASRC,EAAWD,EAAAA,GAAAA,GAAH,6R,kBCsDd,EA3Da,WACX,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAcR,IAZAW,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BV,EAAAA,EAAAA,IAAmBD,GAFlD,OAEUY,EAFV,OAGIH,EAAaG,EAAaC,MAH9B,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdH,EACD,GAAE,CAACZ,IAECQ,EAIL,OAAOA,EAAUQ,OAAS,GACxB,SAACZ,EAAD,UACGI,EAAUS,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACb,UAACd,EAAD,YAEI,gBACEe,IACED,EAAY,yCAC0BA,GAClCE,EAENC,IAAKL,EACLM,MAAM,MACNC,OAAO,UAGX,4BACE,wBACE,uBAAIP,OAEN,wCACa,uBAAIC,YAlBNjB,EADF,OA0BjB,cACEwB,MAAO,CACLC,SAAU,GACVC,WAAY,IACZC,MAAO,UAJX,6CAUH,C","sources":["components/Api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7abf809e4374e90b9eb434bc86c68fb9';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst MOVIE_URL = `${BASE_URL}/movie`;\n\nconst fetchTrendsFilms = async () => {\n  const responce = await axios.get(`${TREND_URL}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nconst featchSearchFilm = async query => {\n  const responce = await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data;\n};\n\nconst featchMovieDetailsById = async movieId => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport {\n  fetchTrendsFilms,\n  featchSearchFilm,\n  featchMovieDetailsById,\n  featchMovieCredits,\n  featchMovieReviews,\n};\n","import styled from 'styled-components';\n\nconst CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  border-bottom: 2px solid rgb(166 164 164);\n  padding-bottom: 25px`;\n  \nconst CastItem = styled.li`\n  padding: 5px 10px;\n  width: 400px;\n  border: 2px solid orangered;\n  border-radius: 5%;\n  display: flex;\n  gap: 10px;\n  align-content: center;\n  transition: all 0.3s ease;\n  &:hover {\n    background-color: orangered;\n    transform: scale(1.1);\n  }\n`;\n\nexport { CastList, CastItem };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { featchMovieCredits } from '../Api/Api';\nimport { CastList, CastItem } from './Cast.styled';\nimport photo from '../../images/img-not-found-small.png';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const getMovieCast = await featchMovieCredits(movieId);\n        setMovieCast(getMovieCast.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return movieCast.length > 0 ? (\n    <CastList>\n      {movieCast.map(({ id, name, character, profile_path }) => (\n        <CastItem key={id}>\n          {\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : photo\n              }\n              alt={name}\n              width=\"180\"\n              height=\"auto\"\n            />\n          }\n          <div>\n            <p>\n              <b>{name}</b>\n            </p>\n            <p>\n              Character: <b>{character}</b>\n            </p>\n          </div>\n        </CastItem>\n      ))}\n    </CastList>\n  ) : (\n    <p\n      style={{\n        fontSize: 22,\n        fontWeight: 700,\n        color: '000000',\n      }}\n    >\n      No information about cast yet...\n    </p>\n  );\n};\nexport default Cast;"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","MOVIE_URL","fetchTrendsFilms","axios","responce","data","featchSearchFilm","query","featchMovieDetailsById","movieId","featchMovieCredits","id","featchMovieReviews","CastList","styled","CastItem","useState","movieCast","setMovieCast","useParams","useEffect","getMovieCast","cast","console","log","length","map","name","character","profile_path","src","photo","alt","width","height","style","fontSize","fontWeight","color"],"sourceRoot":""}