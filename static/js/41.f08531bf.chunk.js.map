{"version":3,"file":"static/js/41.f08531bf.chunk.js","mappings":"8SAEMA,EAAU,mCAEVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAS,UAAMH,EAAN,UAETI,EAAgB,mCAAG,oGACAC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAkCF,IADlC,cACjBO,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACIH,EADJ,kBACqBU,IAFrB,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBG,EAAsB,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLQ,EADK,oBACcZ,IAFR,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOtBK,EAAkB,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLU,EADK,4BACiBd,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOlBO,EAAkB,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,YACLU,EADK,4BACiBd,IAFf,cACnBO,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,qIClCxB,EAAuB,sBAAvB,EAAsD,wB,SC2CtD,EAvCgB,WACd,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAcR,IAZAQ,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEkCL,EAAAA,EAAAA,IAAmBH,GAFrD,OAEUS,EAFV,OAGIH,EAAgBG,EAAgBC,SAHpC,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdH,EACD,GAAE,CAACT,IAECK,EAIL,OAAOA,EAAaQ,OAAS,GAC3B,eAAIC,UAAWC,EAAf,SACGV,EAAaW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAChB,2BACE,wBACE,uBAAID,OAEN,uBAAIC,MAJGD,EADO,OAUpB,eAAGH,UAAWC,EAAd,UACG,IADH,sBAKH,C","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/Revievs/Revievs.module.css?e941","components/Revievs/Revievs.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7abf809e4374e90b9eb434bc86c68fb9';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst MOVIE_URL = `${BASE_URL}/movie`;\n\nconst fetchTrendsFilms = async () => {\n  const responce = await axios.get(`${TREND_URL}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nconst featchSearchFilm = async query => {\n  const responce = await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return responce.data;\n};\n\nconst featchMovieDetailsById = async movieId => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieCredits = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nconst featchMovieReviews = async id => {\n  const responce = await axios.get(\n    `${MOVIE_URL}/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data;\n};\n\nexport {\n  fetchTrendsFilms,\n  featchSearchFilm,\n  featchMovieDetailsById,\n  featchMovieCredits,\n  featchMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Revievs_list__VnWlM\",\"norevs\":\"Revievs_norevs__8EC5c\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { featchMovieReviews } from '../Api/Api';\nimport css from './Revievs.module.css';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        const getMovieReviews = await featchMovieReviews(movieId);\n        setMovieReviews(getMovieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieReviews();\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n\n  return movieReviews.length > 0 ? (\n    <ul className={css.list}>\n      {movieReviews.map(({ author, content }) => (\n        <li key={author}>\n          <p>\n            <b>{author}</b>\n          </p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className={css.norevs}>\n      {' '}\n      No reviews yet...\n    </p>\n  );\n};\n\nexport default Reviews;"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","MOVIE_URL","fetchTrendsFilms","axios","responce","data","featchSearchFilm","query","featchMovieDetailsById","movieId","featchMovieCredits","id","featchMovieReviews","useState","movieReviews","setMovieReviews","useParams","useEffect","getMovieReviews","results","console","log","length","className","css","map","author","content"],"sourceRoot":""}